1. README_FINAL.txt: This file.
-----------------
Data Files

2. redd_data/: contains folder low_freq, which has the .dat files for the original dataset
               Also contains the files outputted from data_cleaner.py, which are the properly formatted versions of the dataset
	The redd_data/ file should be uploaded onto the rcc cluster in tmp/joanzwang. It won't let me see the files through ls joanzwang or
        cd joanzwang, but it also says "file exists" when I try to copyFromLocal again.

        If the file is not available in tmp, it is also in my personal folder on the cluster:
        home/joanzwang/joanzwang-cs123-spr-14/joanzwang-cs123/redd_data, as well as on svn

3. data_cleaner.py: Run this file first to put the raw data from REDD into the proper format. Will output into redd_data file.

------------------
FHMM Files

4. fhmm_pthread.c/h: This program takes in the disaggregated data for a house and outputs the {A, B, pi} parameters of 
the hmms calculated for each device in the house.

	Input: <house id (int 1, 2, 3, 4, 5, or 6)> <number of devices, see chart below> <total time (99999999)><max iterations>
       	default is set to house 1.

5. afamap_alg.py: Takes in the output from fhmm_pthread.c for a single training house, as well as the aggregated data of the testing house.
   The program uses an approximation of the afamap algorithm to predict the disaggregated output of the testing house.
   This output is written to a file.
       Input: Usage: <id of house for testing><id of house for training><time T (745878)>

-----------------
KNN Files

6. knn_file/: make sure this directory exists so that the knn files to be generated by knn_file_setup.py can
be created.

7. knn_file_setup.py: Takes the aggregated output of the test house from redd_map and turns them into the format appropriate for the map reduce job.
   Input: Usage: <test house id number (3)> <(int) granularity (4)> <num devices for test house (20)><time (745878)>

8. mrjob_knn.py: Takes the testing file created above and the disaggregated files from redd_data for all of the houses.
   Runs a map reduce job using mrjob, and outputs the predicted output for each device in the testing file.
   input: write the names of all of the files needed using --file in front of each:
      <filename test house correctly formatted in knn_file> <filename test house disaggregated data> <filenames test houses disaggregated data>
   output: knn_file/predicted_sequence_house_"+self.test_id+".csv"
----------------
Output Analysis Files

9. output_compare.py: takes the predicted output from either the FHMM or the KNN model and the actual disaggregated data from redd_data.
                      Calculates the accuracy of the prediction.

	Input: Usage: <filename of the predicted test output> <filename of observed disagg output of test data from REDD> <filename of observed agg output of test data from REDD>
---------------
Other Files

10. REDD Project Final Paper Joan Wang.docs: Final 6-8 page report.

11. proto_hmm/proto_hmm2: prototype models for fhmm

-------------
Chart for Command line Input

House: 1 Devices: 20
House: 2 Devices: 11
House: 3 Devices: 22
House: 4 Devices: 20
House: 5 Devices: 26
House: 6 Devices: 17